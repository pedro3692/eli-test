ATTR ProgPtg: PTGNode;

SYMBOL Program COMPUTE
  PGTOut(PTGFrame(THIS.ProgPtg));
END;


ATTR Ptg: PTGNode;



RULE: Number ::= Int COMPUTE
  Number.Ptg = PTGNumber(Int);
END;

RULE: Identifier ::= Word COMPUTE
  Number.Ptg = PTGIdenfier(StringTable(Word));
END;

ATTR Sym: int;

CHAIN ProgChn: PtgNode;

SYMBOL Program COMPUTE
  CHAINSTART HEAD.ProgChn = PgtNULL;
  SYNT.ProgPtg = TAIL.ProgChn;
END;


RULE: Exp ::= Identifier ':' Number ';' COMPUTE
  Exp.ProgChn = PTGSeq(Exp.ProgChn, PGTExp(Identifier.Ptg, Number.Ptg));
END;


SYMBOL Number INHERITS IdDefScope COMPUTE 
    SYNT.Sym = TERM;
END;

SYMBOL Identifier INHERITS IdDefScope COMPUTE 
    SYNT.Sym = TERM;
END;
